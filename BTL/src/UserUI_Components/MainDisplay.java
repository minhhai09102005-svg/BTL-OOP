package UserUI_Components;

import javafx.scene.*;
import javafx.scene.control.*;
import javafx.scene.layout.*;

// üëá th√™m import HomeUI
import Sidebar_Options.HomeUI;

// V√πng ƒëen hi·ªÉn th·ªã n·ªôi dung trung t√¢m 
public class MainDisplay extends StackPane {

    private final StackPane defaultContent;

    public MainDisplay() {
        setPrefSize(900, 400);
        setStyle("-fx-background-color: #010101;");

        defaultContent = new StackPane(new Label("Welcome"));
        defaultContent.setStyle("-fx-background-color: #010101;");
        // defaultContent co gi√£n theo mainDisplay
        defaultContent.prefWidthProperty().bind(widthProperty());
        defaultContent.prefHeightProperty().bind(heightProperty());

        // üëá thay v√¨ hi·ªÉn th·ªã defaultContent, hi·ªÉn th·ªã HomeUI m·∫∑c ƒë·ªãnh
        HomeUI home = new HomeUI();
        show(bindInto(home));
        // getChildren().setAll(defaultContent); // (gi·ªØ l·∫°i n·∫øu mu·ªën fallback)
    }

    // Hi·ªÉn th·ªã view m·ªõi (n·∫øu null -> v·ªÅ m·∫∑c ƒë·ªãnh)
    public void show(Node view) {
        if (view == null) {
            getChildren().setAll(defaultContent);
            return;
        }
        getChildren().setAll(view);
    }

    // Quay v·ªÅ n·ªôi dung m·∫∑c ƒë·ªãnh
    public void showDefault() {
        show(null);
    }

    // Ti·ªán √≠ch: bind k√≠ch th∆∞·ªõc view m·ªõi v·ªõi mainDisplay, n·∫øu l√† Region
    public <T extends Node> T bindInto(T view) {
        if (view instanceof Region r) {
            r.prefWidthProperty().bind(widthProperty());
            r.prefHeightProperty().bind(heightProperty());
        } else {
            // n·∫øu kh√¥ng ph·∫£i Region, b·ªçc 1 l·ªõp ƒë·ªÉ bind
            StackPane wrapper = new StackPane(view);
            wrapper.prefWidthProperty().bind(widthProperty());
            wrapper.prefHeightProperty().bind(heightProperty());
            show(wrapper);
            return view;
        }
        return view;
    }
}
